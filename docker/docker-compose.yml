version: '3.5'
services:
  api1: # API - Instância 01
    image: localhost:5000/api
    hostname: api1
    environment:
      - DATABASE_URL=jdbc:postgresql://db:5432/persons
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=postgres
      - REDIS_URL=redis
    depends_on:
      - db
      - redis
    expose:
      - "80"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'

  api2: # API - Instância 01
    image: localhost:5000/api
    hostname: api2
    environment:
      - DATABASE_URL=jdbc:postgresql://db:5432/persons
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=postgres
      - REDIS_URL=redis
    depends_on:
      - db
      - redis
    expose:
      - "80"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'

  nginx: # Load Balancerp
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'

  db: # Banco de dados
    image: postgres
    command: postgres -c 'max_connections=450'
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: persons
    ports:
      - "5432:5432"
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: '0.5GB'

  redis:
    image: 'bitnami/redis:latest'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - '6379:6379'
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: '0.5GB'